apiVersion: agent-install.openshift.io/v1beta1
kind: InfraEnv
metadata:
  name:{{{ai.name}}}
  namespace:{{{ai.name}}}
  labels:
    'assisted-install-location':{{{ai.location}}}
spec:
  agentLabels:
  {{#each ai.labels}}
    {{@key}}: {{this}}
  {{/each}}
  clusterRef:
    name:{{{ai.name}}}
    namespace:{{{ai.name}}}
  pullSecretRef:
    name:{{{ai.name}}}
  sshAuthorizedKey: {{{ai.sshPublicKey}}}
status:
  agentLabelSelector:
    matchLabels:
    {{#each ai.labels}}
      {{@key}}: {{this}}
    {{/each}}

---
apiVersion: hive.openshift.io/v1
kind: ClusterDeployment
metadata:
  name: {{{ai.name}}}
  namespace: {{{ai.name}}}
spec:
  baseDomain:  {{{ai.baseDomain}}}
  clusterInstallRef:
    group: extensions.hive.openshift.io
    kind: AgentClusterInstall
    name: {{{ai.name}}}
    version: v1beta1
  clusterName: {{{ai.name}}}
  platform:
    agentBareMetal:
      agentSelector:
        matchLabels:
        {{#each ai.labels}}
          {{@key}}:
          {{this}}
        {{/each}}
  pullSecretRef:
    name: pullsecret-{{{ai.name}}}

---
apiVersion: extensions.hive.openshift.io/v1beta1
kind: AgentClusterInstall
metadata:
  name: {{{ai.name}}}
  namespace: {{{ai.name}}}
spec:
  clusterDeploymentRef:
    name: {{{ai.name}}}
  networking:
    clusterNetwork:
     - cidr: '10.128.0.0/14'
      hostPrefix: 23
      serviceNetwork:
      - '172.30.0.0/16'
  provisionRequirements:
    controlPlaneAgents: 3
    imageSetRef:
      name: openshift-v4.8.0

---
kind: Secret
apiVersion: v1
metadata:
  name: pullsecret-{{{ai.name}}}
  namespace: {{{ai.name}}}
data:
  '.dockerconfigjson': {{{ai.pullSecret}}}
type: kubernetes.io/dockerconfigjson

---
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  labels:
    cloud: Hybrid
    name: {{{ai.name}}}
    {{#if clusterSet}}
    cluster.open-cluster-management.io/clusterset: '{{{clusterSet}}}'
    {{/if}}
  name: {{{ai.name}}}
spec:
  hubAcceptsClient: true
  
--- 
apiVersion: agent.open-cluster-management.io/v1
kind: KlusterletAddonConfig
metadata:
  name: {{{ai.name}}}
  namespace: {{{ai.name}}}
spec:
  clusterName: {{{ai.name}}}
  clusterNamespace: {{{ai.name}}}
  clusterLabels:
    cloud: Hybrid
    applicationManager:
      enabled: true
    policyController:
      enabled: true
    searchCollector:
      enabled: true
    certPolicyController:
      enabled: true
    iamPolicyController:
      enabled: true
