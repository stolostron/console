
apiVersion: v1
metadata:
  name: '{{{name}}}' ##name
baseDomain: {{{baseDomain}}} ##baseDomain


{{#if hasProxy}}
proxy:
  httpProxy: {{{httpProxy}}} ##httpProxy
  httpsProxy: {{{httpsProxy}}} ##httpsProxy
{{#if noProxy}}
  noProxy: {{{noProxy}}} ## noProxy
{{/if}}
{{/if}}


{{! ========================================================== }}
{{! ========================================================== }}
{{! ===================Control Plane Nodes==================== }}
{{! ========================================================== }}
{{! ========================================================== }}

{{#each masterPool}}
controlPlane:
  {{#if @root.architecture}}
  architecture: {{{@root.architecture}}}
  {{/if}}
  hyperthreading: Enabled
  name: master
{{#if @root.singleNode}}
  replicas: 1
{{else}}
  replicas: 3
{{/if}}

{{#switch @root.infrastructure}}

  {{#case 'AWS'}}
  platform:
    aws:
{{#if masterZones}}
      zones: ##masterPool.{{@index}}.masterZones
      {{#each masterZones}}
      - {{{region}}}{{{ this }}}
      {{/each}}
{{/if}}
      rootVolume:
        iops: 4000
        size: {{{masterRootStorage}}} ##masterPool.{{@index}}.masterRootStorage
        type: io1
      type: {{{masterType}}} ##masterPool.{{@index}}.masterType
  {{/case}}

  {{#case 'GCP'}}
  platform:
    gcp:
      type: {{{masterType}}} ##masterPool.{{@index}}.masterType
  {{/case}}

  {{#case 'Azure'}}
  platform:
    azure:
      osDisk:
        diskSizeGB: {{{masterRootStorage}}} ##masterPool.{{@index}}.masterRootStorage
      type:  {{{masterType}}} ##masterPool.{{@index}}.masterType
  {{/case}}

  {{#case 'vSphere'}}
  platform:
    vsphere:
      cpus:  {{{masterCpus}}} ##masterPool.{{@index}}.masterCpus
      coresPerSocket:  {{{masterCoresPerSocket}}} ##masterPool.{{@index}}.masterCoresPerSocket
      memoryMB:  {{{masterMemoryMB}}} ##masterPool.{{@index}}.masterMemoryMB
      osDisk:
        diskSizeGB: {{{masterRootStorage}}} ##masterPool.{{@index}}.masterRootStorage
  {{/case}}

  {{#case 'RHV'}}
  platform:
    ovirt:
      cpu:
        cores: {{{masterCores}}} ##masterPool.{{@index}}.masterCores
        sockets: {{{masterSockets}}} ##masterPool.{{@index}}.masterSockets
      memoryMB:  {{{masterMemoryMB}}} ##masterPool.{{@index}}.masterMemoryMB
      osDisk:
        sizeGB: {{{masterRootStorage}}} ##masterPool.{{@index}}.masterRootStorage
      vmType: high_performance
  {{/case}}

  {{#case 'OpenStack'}}
  platform:
    openstack:
      type: {{{masterType}}} ##masterPool.{{@index}}.masterType
  {{/case}}

{{/switch}}

{{/each}}


{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================Worker Nodes============================ }}
{{! ========================================================== }}
{{! ========================================================== }}

{{#if_eq infrastructure 'BMC'}}
compute:
- name: worker
  replicas: {{{computeNodeCount}}}
{{/if_eq}}

{{#each workerPools}}
{{#if @first}}
compute:
- hyperthreading: Enabled
  {{#if @root.architecture}}
  architecture: {{{@root.architecture}}}
  {{/if}}
  name: '{{{workerName}}}'
  {{#if @root.singleNode}}
  replicas: 0
  {{else}}
  replicas: {{{computeNodeCount}}} ##workerPools.{{@index}}.computeNodeCount
  {{/if}}
{{#switch @root.infrastructure}}

  {{#case 'AWS'}}
  platform:
    aws:
      rootVolume:
        iops: 2000
        size: {{{workerStorage}}} ##workerPools.{{@index}}.workerStorage
        type: io1
      type: {{{workerType}}} ##workerPools.{{@index}}.workerType
{{#if workerZones}}
      zones: ##workerPools.{{@index}}.workerZones
      {{#each workerZones}}
      - {{{region}}}{{{ this }}}
      {{/each}}
{{/if}}

  {{/case}}

  {{#case 'GCP'}}
  platform:
    gcp:
      type: {{{workerType}}} ##workerPools.{{@index}}.workerType
  {{/case}}

  {{#case 'Azure'}}
  platform:
    azure:
      type:  {{{workerType}}} ##workerPools.{{@index}}.workerType
      osDisk:
        diskSizeGB: {{{workerStorage}}} ##workerPools.{{@index}}.workerStorage
{{#if workerZones}}
      zones: ##workerPools.{{@index}}.workerZones
      {{#each workerZones}}
      - "{{{ this }}}"
      {{/each}}
{{/if}}
  {{/case}}

  {{#case 'vSphere'}}
  platform:
    vsphere:
      cpus:  {{{cpus}}} ##workerPools.{{@index}}.cpus
      coresPerSocket:  {{{coresPerSocket}}} ##workerPools.{{@index}}.coresPerSocket
      memoryMB:  {{{memoryMB}}} ##workerPools.{{@index}}.memoryMB
      osDisk:
        diskSizeGB: {{{diskSizeGB}}} ##workerPools.{{@index}}.diskSizeGB
  {{/case}}

  {{#case 'RHV'}}
  platform:
    ovirt:
      cpu:
        cores: {{{cores}}} ##workerPools.{{@index}}.cores
        sockets: {{{sockets}}} ##workerPools.{{@index}}.sockets
      memoryMB:  {{{memoryMB}}} ##workerPools.{{@index}}.memoryMB
      osDisk:
        sizeGB: {{{diskSizeGB}}} ##workerPools.{{@index}}.diskSizeGB
      vmType: server
  {{/case}}

  {{#case 'OpenStack'}}
  platform:
    openstack:
      type: {{{workerType}}} ##workerPools.{{@index}}.workerType
  {{/case}}

{{/switch}}
{{/if}}
{{/each}}



{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================Networks================================ }}
{{! ========================================================== }}
{{! ========================================================== }}

networking:
  networkType: {{{networkType}}} ##networkType
  clusterNetwork:
{{#each networks}}
  - cidr: {{{clusterNetwork}}} ##networks.{{@index}}.clusterNetwork
    hostPrefix: {{{hostPrefix}}} ##networks.{{@index}}.hostPrefix
{{/each}}
  machineNetwork:
{{#each networks}}
  - cidr: {{{machineCIDR}}} ##networks.{{@index}}.machineCIDR
{{/each}}
  serviceNetwork:
{{#each networks}}
  - {{{serviceNetwork}}} ##networks.{{@index}}.serviceNetwork
{{/each}}


{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================Platform================================ }}
{{! ========================================================== }}
{{! ========================================================== }}


platform:
{{#switch infrastructure}}

{{#case 'AWS'}}
  aws:
    region: {{{region}}}
    {{#if subnetID}}
    subnets:
    {{#each subnetID}}
      - {{{.}}}
    {{/each}}
    {{/if}}

    {{#if (arrayItemHasKey serviceEndpoints "endpointName")}}
    serviceEndpoints:
    {{#each serviceEndpoints}}
      {{#if endpointName}}
      - name: {{{endpointName}}}
        url: {{{endpointURL}}}
      {{/if}}
    {{/each}}
    {{/if}}
    {{#if hostedZone}}
    hostedZone: {{{hostedZone}}}
    {{/if}}
    {{#if amiID}}
    amiID: {{{amiID}}}
    {{/if}}
{{#if amiID}}
publish: Internal
{{/if}}
{{/case}}

{{#case 'GCP'}}
  gcp:
    projectID: {{{projectID}}} ##projectID
    region: {{{region}}}
{{/case}}

{{#case 'Azure'}}
  azure:
    baseDomainResourceGroupName: {{{baseDomainResourceGroupName}}}
    cloudName: {{{cloudName}}}
    region: {{{region}}}
{{/case}}

{{#case 'vSphere'}}
  vsphere:
    vCenter: {{{vCenter}}}
    username: {{{username}}}
    password: {{{password}}}
    datacenter: {{{datacenter}}}
    defaultDatastore: {{{defaultDatastore}}}
    cluster: {{{cluster}}}
    apiVIP: {{{apiVIP}}}    ##apiVIP
    ingressVIP: {{{ingressVIP}}}  ##ingressVIP
    network: '{{{networkName}}}' ##networkName
    {{#if_truthy vsphereDiskType}}
    diskType: '{{{vsphereDiskType}}}'
    {{/if_truthy}}
    {{#if_truthy vsphereFolder}}
    folder: '{{{vsphereFolder}}}'
    {{/if_truthy}}
    {{#if_truthy vsphereResourcePool}}
    resourcePool: '{{{vsphereResourcePool}}}'
    {{/if_truthy}}
{{/case}}

{{#case 'RHV'}}
  ovirt:
    api_vip: {{{apiVIP}}}    ##apiVIP
    ingress_vip: {{{ingressVIP}}}  ##ingressVIP
    ovirt_network_name: {{{ovirt_network_name}}} ##ovirt_network_name
    vnicProfileID: {{{vnicProfileID}}}  ##vnicProfileID
    ovirt_cluster_id: {{{ovirt_cluster_id}}} ##ovirt_cluster_id
    ovirt_storage_domain_id: {{{ovirt_storage_domain_id}}} ##ovirt_storage_domain_id
{{/case}}

{{! == NOTE: lbFloatingIP is deprecated in 4.7 for apiFloatingIP, but since we still support 4.5 and 4.6, we need the old key }}
{{#case 'OpenStack'}}
  openstack:
    cloud: {{{cloud}}}
    externalNetwork: {{{externalNetworkName}}}
    {{#if lbFloatingIP}}
    lbFloatingIP: {{{lbFloatingIP}}}
    {{/if}}
    {{#if apiFloatingIP}}
    apiFloatingIP: {{{apiFloatingIP}}}
    {{/if}}
    ingressFloatingIP: {{{ingressFloatingIP}}}
    {{#if clusterOSImage}}
    clusterOSImage: >-
      {{{clusterOSImage}}}
    {{/if}}
    {{#if externalDNS}}
    externalDNS:
    {{#each externalDNS}}
    - {{{.}}}
    {{/each}}
    {{/if}}
{{/case}}

{{/switch}}

{{#if fips}}
fips: true
{{/if}}

{{#if imageContentSources}}
pullSecret: {{{pullSecret}}}
{{else}}
pullSecret: "" # skip, hive will inject based on it's secrets
{{/if}}

{{#if ssh-publickey}}
sshKey: |-
{{#each ssh-publickey}}
    {{{.}}}
{{/each}}
{{/if}}

{{! ==================Disconnected BMC================================ }}
{{#if additionalTrustBundle}}
additionalTrustBundle: |-
{{#each additionalTrustBundle}}
    {{{.}}}
{{/each}}
{{/if}}

{{#if imageContentSources}}
imageContentSources:
{{#each imageContentSources}}
{{{.}}}
{{/each}}
{{/if}}

{{#if imageMirror}}
{{#if imageMirror.[0]}}
imageContentSources:
- mirrors:
  - {{{imageMirror}}}
  source: quay.io/openshift-release-dev/ocp-release-nightly
- mirrors:
  - {{{imageMirror}}}
  source: quay.io/openshift-release-dev/ocp-release
- mirrors:
  - {{{imageMirror}}}
  source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
{{/if}}
{{/if}}
