---
apiVersion: hypershift.openshift.io/v1alpha1
kind: HostedCluster
metadata:
  name: '{{{hypershift.name}}}'
  namespace: '{{{hypershift.name}}}'
  labels:
  {{#if hypershift.managedClusterSet}}
    "cluster.open-cluster-management.io/clusterset": '{{{hypershift.managedClusterSet}}}'
  {{/if}}
spec:
  release:
    image: {{{hypershift.releaseImage}}}
  pullSecret:
    name: pullsecret-cluster-{{{hypershift.name}}}
  sshKey:
    name: sshkey-cluster-{{{hypershift.name}}}
  networking:
    {{#if hypershift-network.isAdvanced}}
    podCIDR: {{{hypershift-network.podCIDR}}}
    serviceCIDR: {{{hypershift-network.serviceCIDR}}}
    {{else}}
    podCIDR: 10.132.0.0/14
    serviceCIDR: 172.31.0.0/16
    {{/if}}
    machineCIDR: {{{hypershift-network.machineCIDR}}}
  {{#if hypershift-network.enableProxy}}
  configuration:
    items:
    - apiVersion: config.openshift.io/v1
      kind: Proxy
      spec:
        httpProxy: '{{{hypershift-network.httpProxy}}}'
        httpsProxy: '{{{hypershift-network.httpsProxy}}}'
        noProxy: '{{{hypershift-network.noProxy}}}'
  {{/if}}
  platform:
    type: Agent
    agent:
      agentNamespace: '{{{hypershift-hosts.agentNamespace}}}'
  infraID: '{{{hypershift.name}}}'
  dns:
    baseDomain: '{{{hypershift.baseDnsDomain}}}'
  services:
  - service: APIServer
    servicePublishingStrategy:
  {{#switch hypershift-network.apiPublishingStrategy}}
    {{#case 'NodePort'}}
      type: {{{hypershift-network.apiPublishingStrategy}}}
      nodePort:
        address: {{{hypershift-network.nodePortAddress}}}
        port: {{{hypershift-network.nodePortPort}}}
    {{/case}}
    {{#case 'LoadBalancer'}}
      type: {{{hypershift-network.apiPublishingStrategy}}}
    {{/case}}
  {{/switch}}
  - service: OAuthServer
    servicePublishingStrategy:
      type: Route
  - service: OIDC
    servicePublishingStrategy:
      type: Route
  - service: Konnectivity
    servicePublishingStrategy:
      type: Route
  - service: Ignition
    servicePublishingStrategy:
      type: Route

---
apiVersion: v1
kind: Secret
metadata:
  name: pullsecret-cluster-{{{hypershift.name}}}
  namespace: {{{hypershift.name}}}
data:
  '.dockerconfigjson': {{{hypershift.pullSecret}}}
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: Secret
metadata:
  name: sshkey-cluster-{{{hypershift.name}}}
  namespace: '{{{hypershift.name}}}'
stringData:
  id_rsa.pub: {{{hypershift-network.sshPublicKey}}}

{{#each hypershift-hosts.nodePools}}
---
apiVersion: hypershift.openshift.io/v1alpha1
kind: NodePool
metadata:
  name: '{{{this.name}}}'
  namespace: '{{{this.clusterName}}}'
spec:
  clusterName: '{{{this.clusterName}}}'
  {{#if this.manualHostSelect}}
  replicas: {{{this.selectedAgentIDs.length}}}
  {{else}}
  replicas: {{{this.count}}}
  {{/if}}
  management:
    autoRepair: false
    upgradeType: InPlace
  platform:
    type: Agent
    agent:
      agentLabelSelector:
        {{#if this.agentLabels.length}}
        matchLabels:
          {{#each this.agentLabels}}
          '{{{this.key}}}': '{{{this.value}}}'
          {{/each}}
        {{else}}
        matchLabels: {}
        {{/if}}
  release:
    image: {{{this.releaseImage}}}

{{/each}}
---
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  labels:
    cloud: hypershift
    name: '{{{hypershift.name}}}'
    {{#if hypershift.managedClusterSet}}
    cluster.open-cluster-management.io/clusterset: '{{{hypershift.managedClusterSet}}}'
    {{/if}}
    {{#each hypershift.additionalLabels}}
    {{{key}}}: '{{{value}}}'
    {{/each}}
  name: '{{{hypershift.name}}}'
spec:
  hubAcceptsClient: true

{{#if includeKlusterletAddonConfig}}
---
apiVersion: agent.open-cluster-management.io/v1
kind: KlusterletAddonConfig
metadata:
  name: '{{{hypershift.name}}}'
  namespace: '{{{hypershift.name}}}'
spec:
  clusterName: '{{{hypershift.name}}}'
  clusterNamespace: '{{{hypershift.name}}}'
  clusterLabels:
    cloud: ai-hypershift
  applicationManager:
    enabled: true
  policyController:
    enabled: true
  searchCollector:
    enabled: true
  certPolicyController:
    enabled: true
  iamPolicyController:
    enabled: true
{{/if}}
---
