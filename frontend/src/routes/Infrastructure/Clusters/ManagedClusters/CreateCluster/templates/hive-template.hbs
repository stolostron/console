
{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================ClusterDeployment======================= }}
{{! ========================================================== }}
{{! ========================================================== }}

apiVersion: hive.openshift.io/v1
kind: ClusterDeployment
metadata:
  name: '{{{name}}}' ##name
  namespace: '{{{name}}}'
  labels:
    cloud: '{{infrastructure}}'
{{#if region}}
    region: '{{{region}}}'  ##region
{{/if}}
    vendor: OpenShift
{{#if clusterSet}}
    cluster.open-cluster-management.io/clusterset: '{{{clusterSet}}}'
{{/if}}

spec:
  baseDomain: {{{baseDomain}}}  ##baseDomain
  clusterName: '{{{name}}}'
  controlPlaneConfig:
    servingCertificates: {}
  installAttemptsLimit: {{{installAttemptsLimit}}}
  installed: false
  platform:

{{! ==================platform======================= }}
{{#switch infrastructure}}

  {{#case 'AWS'}}
    aws:
      credentialsSecretRef:
        name: {{{name}}}-aws-creds
      region: {{{region}}}
  {{/case}}

  {{#case 'GCP'}}
    gcp:
      credentialsSecretRef:
        name: {{{name}}}-gcp-creds
      region: {{{region}}}
  {{/case}}

  {{#case 'Azure'}}
    azure:
      baseDomainResourceGroupName: {{{baseDomainResourceGroupName}}} ##resourceGroupName
      credentialsSecretRef:
        name: {{{name}}}-azure-creds
      region: {{{region}}}
      cloudName: {{{cloudName}}}
  {{/case}}

  {{#case 'vSphere'}}
    vsphere:
      cluster: {{{cluster}}}
      certificatesSecretRef:
        name: {{{name}}}-vsphere-certs
      credentialsSecretRef:
        name: {{{name}}}-vsphere-creds
      vCenter: {{{vCenter}}}
      datacenter: {{{datacenter}}}
      defaultDatastore: {{{defaultDatastore}}}
      network: '{{{networkType}}}'  ##networkType
      {{#if_truthy vsphereFolder}}
      folder: '{{{vsphereFolder}}}'
      {{/if_truthy}}
  {{/case}}

  {{#case 'RHV'}}
    ovirt:
      certificatesSecretRef:
        name: {{{name}}}-ovirt-certs
      credentialsSecretRef:
        name: {{{name}}}-ovirt-creds
      ovirt_cluster_id: {{{ovirt_cluster_id}}}
      ovirt_network_name: {{{ovirt_network_name}}}
      storage_domain_id: {{{ovirt_storage_domain_id}}}
  {{/case}}

  {{#case 'OpenStack'}}
    openstack:
      credentialsSecretRef:
        name: {{{name}}}-openstack-creds
      cloud: {{{cloud}}}
  {{/case}}

{{/switch}}

{{! ==================provisioning======================= }}

  provisioning:
    installConfigSecretRef:
      name: {{{name}}}-install-config
    sshPrivateKeySecretRef:
      name: {{{name}}}-ssh-private-key

{{#if releaseImage}}
    imageSet:
      name: {{{releaseImage}}}
{{/if}}
{{#if releaseImageReference}}
    imageSetRef:
       #{{{clusterImageSetComment}}}
      name: {{{releaseImageReference}}}
{{/if}}
{{#if clusterReleaseImage}}
    imageSetRef:
      name: {{{clusterImageSetName}}}
{{/if}}

  pullSecretRef:
    name: {{{name}}}-pull-secret

{{! ========================================================== }}
{{! ========================================================== }}
{{! =======================Cluster============================ }}
{{! ========================================================== }}
{{! ========================================================== }}

---
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  labels:
{{#switch infrastructure}}
  {{#case 'AWS'}}
    cloud: Amazon
    region: {{{region}}}
  {{/case}}
  {{#case 'GCP'}}
    cloud: Google
    region: {{{region}}}
  {{/case}}
  {{#case 'Azure'}}
    cloud: Azure
    region: {{{region}}}
  {{/case}}
  {{#case 'vSphere'}}
    cloud: vSphere
  {{/case}}
  {{#case 'OpenStack'}}
    cloud: OpenStack
  {{/case}}
  {{#case 'RHV'}}
    cloud: RHV
  {{/case}}
{{/switch}}
    name: '{{{name}}}'
    vendor: OpenShift
{{#if clusterSet}}
    cluster.open-cluster-management.io/clusterset: '{{{clusterSet}}}'
{{/if}}
    {{#each additional}}
    {{{key}}}: '{{{value}}}'
    {{/each}}
  name: '{{{name}}}'
spec:
  hubAcceptsClient: true


{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================ClusterImageSet========================= }}
{{! ========================================================== }}
{{! ========================================================== }}

{{#if clusterReleaseImage}}
---
apiVersion: hive.openshift.io/v1
kind: ClusterImageSet
metadata:
  name: {{{clusterImageSetName}}}
  labels:
    visible: 'true'
spec:
  releaseImage: {{{clusterReleaseImage}}}
{{/if}}


{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================MachinePool============================= }}
{{! ========================================================== }}
{{! ========================================================== }}

{{#each workerPools}}
---
apiVersion: hive.openshift.io/v1
kind: MachinePool
metadata:
  name: {{{@root.name}}}-{{{workerName}}}
  namespace: '{{{@root.name}}}'
spec:
  clusterDeploymentRef:
    name: '{{{@root.name}}}'
  name: {{{workerName}}} ##workerPools.{{@index}}.workerName

{{#switch @root.infrastructure}}

  {{#case 'AWS'}}
  platform:
    aws:
      rootVolume:
        iops: 2000
        size: {{{workerStorage}}} ##workerPools.{{@index}}.workerStorage
        type: io1
      type: {{{workerType}}} ##workerPools.{{@index}}.workerType
      {{#if workerZones}}
      zones: ##workerPools.{{@index}}.workerZones
      {{#each workerZones}}
      - {{{region}}}{{{ this }}}
      {{/each}}
      {{/if}}
  {{/case}}

  {{#case 'GCP'}}
  platform:
    gcp:
      type: {{{workerType}}} ##workerPools.{{@index}}.workerType
  {{/case}}

  {{#case 'Azure'}}
  platform:
    azure:
      osDisk:
        diskSizeGB: {{{workerStorage}}} ##workerPools.{{@index}}.workerStorage
      type: {{{workerType}}} ##workerPools.{{@index}}.workerType
{{#if workerZones}}
      zones: ##workerPools.{{@index}}.workerZones
      {{#each workerZones}}
      - "{{{ this }}}"
      {{/each}}
{{/if}}
  {{/case}}

  {{#case 'vSphere'}}
  platform:
    vsphere:
      cpus: {{{cpus}}} ##workerPools.{{@index}}.cpus
      coresPerSocket: {{{coresPerSocket}}} ##workerPools.{{@index}}.coresPerSocket
      memoryMB: {{{memoryMB}}} ##workerPools.{{@index}}.memoryMB
      osDisk:
        diskSizeGB: {{{diskSizeGB}}} ##workerPools.{{@index}}.diskSizeGB
  {{/case}}

  {{#case 'RHV'}}
  platform:
    ovirt:
      cpu:
        cores: {{{cores}}} ##workerPools.{{@index}}.cores
        sockets: {{{sockets}}} ##workerPools.{{@index}}.sockets
      memoryMB: {{{memoryMB}}} ##workerPools.{{@index}}.memoryMB
      osDisk:
        sizeGB: {{{diskSizeGB}}} ##workerPools.{{@index}}.diskSizeGB
      vmType: server
  {{/case}}

  {{#case 'OpenStack'}}
  platform:
    openstack:
      flavor: {{{workerType}}} ##workerPools.{{@index}}.workerType
  {{/case}}

{{/switch}}
  {{#if @root.singleNode}}
  replicas: 0
  {{else}}
  replicas: {{{computeNodeCount}}} ##workerPools.{{@index}}.computeNodeCount
  {{/if}}
{{/each}}

{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================ClusterCurator========================== }}
{{! ========================================================== }}
{{! ========================================================== }}

{{#if clusterCuratorSpec}}
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: ClusterCurator
metadata:
  name: {{{name}}}
  namespace: {{{name}}}
{{{clusterCuratorSpec}}}
{{/if}}

{{! ========================================================== }}
{{! ========================================================== }}
{{! ==================Secrets================================= }}
{{! ========================================================== }}
{{! ========================================================== }}

{{#if pullSecret}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{{name}}}-pull-secret
  namespace: '{{{name}}}'
stringData:
{{#if showSecrets}}
  .dockerconfigjson: |-
    {{{pullSecret}}}
{{else}}
  .dockerconfigjson: # injected on create
{{/if}}
type: kubernetes.io/dockerconfigjson
{{/if}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{{name}}}-install-config
  namespace: '{{{name}}}'
type: Opaque
data:
  # Base64 encoding of install-config yaml
  install-config.yaml: {{{install-config}}}
{{#if ssh-privatekey}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{{name}}}-ssh-private-key
  namespace: '{{{name}}}'
stringData:
{{#if showSecrets}}
  ssh-privatekey: |-
{{#each ssh-privatekey}}
    {{{.}}}
{{/each}}
{{else}}
  ssh-privatekey: # injected on create
{{/if}}
type: Opaque
{{/if}}

---
apiVersion: v1
kind: Secret
type: Opaque

{{#switch infrastructure}}

{{#case 'AWS'}}
metadata:
  name: {{{name}}}-aws-creds
  namespace: '{{{name}}}'
stringData:
  aws_access_key_id: {{{aws_access_key_id}}}
{{#if showSecrets}}
  aws_secret_access_key: {{{aws_secret_access_key}}}
{{else}}
  aws_secret_access_key: # injected on create
{{/if}}
{{/case}}

{{#case 'GCP'}}
metadata:
  name: {{{name}}}-gcp-creds
  namespace: '{{{name}}}'
stringData:
{{#if showSecrets}}
  osServiceAccount.json: |-
{{! handlebars does not like periods in ids, so we will use a replacement to map to the correct osServiceAccount.json - See ControlDataHelpers.js replacements[] }}
{{#each osServiceAccountJson}}
    {{{.}}}
{{/each}}
{{else}}
  osServiceAccount.json: # injected on create
{{/if}}
{{/case}}

{{#case 'Azure'}}
metadata:
  name: {{{name}}}-azure-creds
  namespace: '{{{name}}}'
stringData:
{{#if showSecrets}}
  osServicePrincipal.json: |-
{{! handlebars does not like periods in ids, so we will use a replacement to map to the correct osServicePrincipal.json - See ControlDataHelpers.js replacements[] }}
{{#each osServicePrincipalJson}}
    {{{.}}}
{{/each}}
{{else}}
  osServicePrincipal.json: # injected on create
{{/if}}
{{/case}}

{{#case 'vSphere'}}
metadata:
  name: {{{name}}}-vsphere-creds
  namespace: '{{{name}}}'
stringData:
  username: {{{username}}}
  password: {{{password}}}

---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{{name}}}-vsphere-certs
  namespace: '{{{name}}}'
data:

{{#if showSecrets}}
  .cacert: {{{cacertificate}}}
{{else}}
  .cacert: # injected on create
{{/if}}

{{/case}}

{{#case 'RHV'}}
metadata:
  name: {{{name}}}-ovirt-creds
  namespace: '{{{name}}}'
stringData:
{{#if showSecrets}}
  ovirt-config.yaml: |-
    ovirt_url: {{{ovirt_url}}}
    ovirt_username: {{{ovirt_username}}}
    ovirt_password: {{{ovirt_password}}}
    ovirt_ca_bundle: |+
      {{{ovirt_ca_bundle}}}
{{else}}
  ovirt-config.yaml: # injected on create
{{/if}}
---

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{{name}}}-ovirt-certs
  namespace: '{{{name}}}'
stringData:
{{#if showSecrets}}
  .cacert: |+
    {{ovirt_ca_bundle}}
{{else}}
  .cacert: # injected on create
{{/if}}
{{/case}}

{{#case 'OpenStack'}}
metadata:
  name: {{{name}}}-openstack-creds
  namespace: '{{{name}}}'
stringData:
  cloud: '{{{cloud}}}'
{{#if showSecrets}}
  clouds.yaml: |-
{{! handlebars does not like periods in ids, so we will use a replacement to map to the correct clouds.yaml - See ControlDataHelpers.js replacements[] }}
     {{{cloudsYaml}}}
{{else}}
  clouds.yaml: # injected on create
{{/if}}
{{/case}}

{{/switch}}

{{#each supportedCurations}}
{{#if (lookup .. (append "toweraccess-" .))}}
{{#with (lookup .. (append "toweraccess-" .))}}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{{append "toweraccess-" ..}}}
  namespace: {{{@root.name}}}
  labels:
    cluster.open-cluster-management.io/type: ans
    cluster.open-cluster-management.io/copiedFromSecretName: {{{metadata.name}}}
    cluster.open-cluster-management.io/copiedFromNamespace: {{{metadata.namespace}}}
stringData:
  host: {{{stringData.host}}}
{{#if @root.showSecrets}}
  token: {{{stringData.token}}}
{{else}}
  token: # injected on create
{{/if}}
{{/with}}
{{/if}}
{{/each}}


{{#if includeKlusterletAddonConfig}}
{{>endpoints}}
{{/if}}
