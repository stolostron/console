{
    "name": "@open-cluster-management/console",
    "version": "0.0.1",
    "license": "SEE LICENSE IN LICENSE",
    "workspaces": [
        "libraries/*",
        "routes/*",
        "frontend",
        "backend"
    ],
    "scripts": {
        "start": "workspaces-run --parallel -- npm run watch",
        "clean": "workspaces-run --parallel -- rm -rf node_modules package-lock.json dist lib coverage *.tsbuildinfo test-report.xml",
        "build": "workspaces-run --parallel --order-by-deps -- npm run build",
        "test": "workspaces-run --parallel -- npm test",
        "update": "npm run clean && rm -rf package-lock.json node_modules && npm run update:doctor && npm run clean && npm install && npm dedup && npm audit fix",
        "update:doctor": "workspaces-run --parallel -- npx npm-check-updates --upgrade --target minor --doctor",
        "setup": "./setup.sh",
        "copyright:check": "ts-node util/copyright-check",
        "copyright:fix": "ts-node util/copyright-fix",
        "docker:build": "docker build -t console .",
        "docker:run": "npm run docker:build && docker run --rm --name console -p 3000:3000 -e LOG_MEMORY=true -e PORT=3000 -v $PWD/backend/certs:/app/certs -v $PWD/backend/config:/app/config --env-file=backend/.env console | ./node_modules/.bin/pino-zen -i time && docker rm -f console",
        "docker:deploy": "npm run docker:build && docker tag console quay.io/$USER/console:latest && docker push quay.io/$USER/console:latest && ./scripts/patch-deployment.sh latest quay.io/$USER/console",
        "prepare": "husky install"
    },
    "dependencies": {
        "@types/node": "^14.17.4",
        "concurrently": "^6.2.0",
        "husky": "^6.0.0",
        "ts-node": "^9.1.1",
        "typescript": "^4.3.5",
        "workspaces-run": "^1.0.1"
    }
}
